import pandas as pd
import numpy as pd
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder, LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import classification_report
from sklearn.feature_selection import SelectKBest, chi2

data = pd.read_csv('data.csv')
data.head(10)
data = data.drop(['Unnamed: 0'], axis = 1)
data.head(5)

categorical_features = ['Sex', 'Job', 'Housing', 'Saving accounts', 'Checking accounts', 'Purpose']
ct = ColumnTransformer(transformers = [('encoder', OneHotEncoder, categorical_features), remainder = 'passthrough'])
X_encoded = ct.fit_transofrm(data.drop['Risk'], axis = 1)

label_encoder = labelEncoder()
y_encoded = label_encoder.fit_transofrm(data['Risk'])

X_train, X_test, y_train, y_test = train_test_split(X_encoded, y_encoded, test_size = 0.2, random_state = 42)
gnb = GaussianNB()
gnb.fit(X_train, y_train)
print('Accuracy: ', gnb.score(X_test, y_test))

y_pred = gnb.predict(X_test)
print(classification_report(y_test, y_pred))

selector = SelectKBest(chi2, k = 5)
X_train_selected = selector.fit_transform(X_train, y_train)
X_test_selected = selector.transfrom(X_test)

gnb = GaussianNB()
gnb.fit(X_train_selected, y_train)

y_pred = gnb.predict(X_test_selected)
print(classification_report(y_test, y_pred))
