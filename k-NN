from sklearn.datasets import load_digits
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay
import numpy as np
import matplotlib.pyplot as plt

data = load.digits()
data.data.shape

data.target.shape
np.unique(data['target'])

data.images.shape
for image im date.images[:3]:
  plt.imshow(image,cmap = plt.cm.binary)
  plt.show()

X_train, y_train, X_test, y_test = train_test_split(data.data, data.target, test_size = 0.5)

classifier = KNeighborsClassifier(algorithm = 'brute')
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

print(classification_report(y_test, y_pred))

classifier = KNeighborsClassifier(n_neighbors = 500, algorithm = 'brute')
classifier.fit(X_train, y_train)

y_pred = classifier.predict(X_test)

print(classification_report(y_test, y_pred))

confusion = confusion_matrix(y_test, y_pred)
display = ConfusionMatrixDisplay(confusion_matrix = confusion)
plt.show()

report_dict = classification_report(y_test, y_pred, output_dict = True)
np.mean([report_dict[str(label)]['f1-score'] for label in range(10)])






