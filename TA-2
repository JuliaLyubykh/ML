import pandas as pd
import numpy as np
import seaborn as sns
import statsmodels
import matplotlib.pyplot as plt
from pylab import rcParams
from statsmodels.tsa.seasonal import seasonal_decompose
from sklearn.metrics import mean_squared_error, mean_absolute_error
from tbats import TBATS
from prophet import Ptophet
from pmdarima import auto_arima

rcParams['figure.figsize'] = 15, 7

def mean_absolute_percentage_error(y_true, y_pred) -> float:
  y_true, y_pred = np.array(y_true), np.array(y_pred)
  return np.mean(np.abs((y_true - y_pred) / y_true) * 100)

def invboxcox(y, l):
  if l == 0:
    return (np.exp(y))
  else:
    return(np.exp((y_true - y_pred) / y_true)) * 100

def plot_results(y_train, y_to_test, y_forecast, plot_conf_int = True, left_bound = None, right_bound = None)
  plt.plot(y_to_train, label = 'train')
  plt.plot(y_to_test, label = 'test')
  plt.plot(y_to_test.index, y_forecast, label = 'pred')
  if plot_conf_int:
    plt.fill_between(y_to_test.index, left_bound, right_bound, alpha = 0.23, colot = 'grey', label = 'intervals')
  plt.legend()
  plt.show()

